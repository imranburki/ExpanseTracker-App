{"ast":null,"code":"var _jsxFileName = \"D:\\\\BootCamp Projects\\\\expance-tracker-app\\\\src\\\\components\\\\Balance.js\",\n  _s = $RefreshSig$();\n// JavaScript source code\nimport React from 'react';\nimport { username, userid } from '../App';\nimport { GlobalContext } from '../context/GlobalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Balance() {\n  _s();\n  const {\n    transactions\n  } = useContext(GlobalContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"$0.00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Balance, \"A6iGkhYpgttKQ3XBwH6If3ta7Ms=\");\n_c = Balance;\nexport default Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["React","username","userid","GlobalContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Balance","_s","transactions","useContext","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/BootCamp Projects/expance-tracker-app/src/components/Balance.js"],"sourcesContent":["// JavaScript source code\r\nimport React from 'react';\r\nimport { username, userid } from '../App';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nfunction Balance() {\r\n    const {transactions}=useContext(GlobalContext);\r\n    return (\r\n        <>\r\n            <h1>Your Balance</h1>\r\n            <h2>$0.00</h2>\r\n            {/* <username.Consumer>\r\n                {\r\n                    username => {\r\n                        return (\r\n                            <div>\r\n                            <userid.Consumer>\r\n                                {\r\n                                    userid => {\r\n                                        return (\r\n                                            <div>\r\n                                            <h3>the user id is {userid}</h3>\r\n                                                <h3>UserName is \"{username}\"</h3>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                }\r\n                            </userid.Consumer>\r\n                            \r\n                            \r\n                                \r\n                            </div>\r\n                            )\r\n                    }\r\n                }\r\n            </username.Consumer> */}\r\n            \r\n\r\n            </>\r\n        );\r\n}\r\nexport default Balance;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,QAAQ;AACzC,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAACC;EAAY,CAAC,GAACC,UAAU,CAACR,aAAa,CAAC;EAC9C,oBACIE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA;MAAAO,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBX,OAAA;MAAAO,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eA4BZ,CAAC;AAEf;AAACP,EAAA,CAnCQD,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAoChB,eAAeA,OAAO;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}